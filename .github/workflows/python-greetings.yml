name: Python Greetings CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  install-pip-deps:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'

      - name: Install Python dependencies
        run: pip install -r requirements.txt
        working-directory: ./python-greetings

  deploy-to-dev:
    needs: install-pip-deps
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'  # You can specify the Node.js version that suits your project

      - name: Install PM2
        run: npm install pm2@latest -g  # Installs the latest version of PM2 globally

      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'
    
      - name: Stop existing service
        run: pm2 delete greetings-app-dev & set "errorlevel=0" || true
        working-directory: ./python-greetings

      - name: Start new service
        run: pm2 start app.py --name greetings-app-dev -- --port 7001
        working-directory: ./python-greetings

      - name: Deploy to Development Environment
        run: echo "Deploying to dev environment"

  tests-on-dev:
    needs: deploy-to-dev
    runs-on: ubuntu-latest
    steps:
      - name: Run tests in Development Environment
        run: echo "Running tests on dev environment"

  deploy-to-staging:
    needs: tests-on-dev
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'  # You can specify the Node.js version that suits your project

      - name: Install PM2
        run: npm install pm2@latest -g  # Installs the latest version of PM2 globally

      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'

      - name: Stop existing service
        run: pm2 delete greetings-app-staging & set "errorlevel=0" || true
        working-directory: ./python-greetings

      - name: Start new service
        run: pm2 start app.py --name greetings-app-staging -- --port 7002
        working-directory: ./python-greetings

      - name: Deploy to Staging Environment
        run: echo "Deploying to staging environment"

  tests-on-staging:
    needs: deploy-to-staging
    runs-on: ubuntu-latest
    steps:
      - name: Run tests in Staging Environment
        run: echo "Running tests on staging environment"

  deploy-to-preprod:
    needs: tests-on-staging
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'  # You can specify the Node.js version that suits your project

      - name: Install PM2
        run: npm install pm2@latest -g  # Installs the latest version of PM2 globally

      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'

      - name: Stop existing service
        run: pm2 delete greetings-app-preprod & set "errorlevel=0" || true
        working-directory: ./python-greetings

      - name: Start new service
        run: pm2 start app.py --name greetings-app-preprod -- --port 7003
        working-directory: ./python-greetings

      - name: Deploy to Pre-Production Environment
        run: echo "Deploying to preprod environment"

  tests-on-preprod:
    needs: deploy-to-preprod
    runs-on: ubuntu-latest
    steps:
      - name: Run tests in Pre-Production Environment
        run: echo "Running tests on preprod environment"

  deploy-to-prod:
    needs: tests-on-preprod
    runs-on: ubuntu-latest
    steps:

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'  # You can specify the Node.js version that suits your project

      - name: Install PM2
        run: npm install pm2@latest -g  # Installs the latest version of PM2 globally

      - name: Checkout python-greetings repository
        uses: actions/checkout@v3.5.2
        with:
          repository: 'mtararujs/python-greetings'
          path: 'python-greetings'

      - name: Stop existing service
        run: pm2 delete greetings-app-prod & set "errorlevel=0" || true
        working-directory: ./python-greetings

      - name: Start new service
        run: pm2 start app.py --name greetings-app-prod -- --port 7004
        working-directory: ./python-greetings

      - name: Deploy to Production Environment
        run: echo "Deploying to prod environment"

  tests-on-prod:
    needs: deploy-to-prod
    runs-on: ubuntu-latest
    steps:
      - name: Run tests in Production Environment
        run: echo "Running tests on prod environment"
